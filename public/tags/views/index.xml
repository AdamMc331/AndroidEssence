<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Views on Android Essence</title>
    <link>http://localhost:1313/tags/views/</link>
    <description>Recent content in Views on Android Essence</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Nov 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/views/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PinchZoomTextView Library Released</title>
      <link>http://localhost:1313/posts/2016-11-27-pinchzoomtextview-library-released/</link>
      <pubDate>Sun, 27 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2016-11-27-pinchzoomtextview-library-released/</guid>
      
      <description>&lt;p&gt;I was recently asked if there was a way to increase/decrease the font size of a TextView by pinching on it, just as you can with many iamges. Well, it turns out that&amp;rsquo;s quite possible!&lt;/p&gt;
&lt;p&gt;All you have to do is override the &lt;code&gt;onTouchEvent()&lt;/code&gt; method of your view, which is &lt;a href=&#34;https://github.com/androidessence/PinchZoomTextView/blob/master/lib/src/main/java/com/androidessence/pinchzoomtextview/PinchZoomTextView.java#L67-L86&#34;&gt;exactly what I do&lt;/a&gt; in my latest library, which allows you to pinch your screen to zoom in and out of a TextView. Check out the sample gif below:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>RichTextView Library Released</title>
      <link>http://localhost:1313/posts/2016-04-03-richtextview-library-released/</link>
      <pubDate>Sun, 03 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2016-04-03-richtextview-library-released/</guid>
      
      <description>&lt;p&gt;As a form of ultimate procrastination this weekend, I decided to spend the last two days developing a RichTextView library.&lt;/p&gt;
&lt;p&gt;This weekend I built the RichTextView (the naming convention comes from the &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/system.windows.controls.richtextbox(v=vs.110).aspx&#34;&gt;RichTextBox&lt;/a&gt; C# class) which allows the user to format different parts ofa. TextView in different ways. For example, if I wanted to display a string but only bold a portion of it, I could achieve that with this class.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>How To Make An Android UI Part 1&amp;#58; XML and Views</title>
      <link>http://localhost:1313/posts/2015-11-08-how-to-make-an-android-ui-part-1/</link>
      <pubDate>Sun, 08 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2015-11-08-how-to-make-an-android-ui-part-1/</guid>
      
      <description>&lt;p&gt;Many of the posts on this site so far deal with nuanced tricks such as RecyclerView swiping/drag and drops, and often make the assumption that the reader has already worked with the Android UI. This post is going to break it down for the beginners, teaching you the fundamentals of mobile UI development and where you can pick up on skills to move forward.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
