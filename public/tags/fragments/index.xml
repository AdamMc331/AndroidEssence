<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fragments on Android Essence</title>
    <link>http://localhost:1313/tags/fragments/</link>
    <description>Recent content in Fragments on Android Essence</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/fragments/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Showing A Fragment For A Result</title>
      <link>http://localhost:1313/posts/2019-01-04-starting-fragment-for-result/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2019-01-04-starting-fragment-for-result/</guid>
      
      <description>&lt;p&gt;A number of developers preach a single activity architecture on Android, which is something I&amp;rsquo;ve been trying to move forward to as well. In the process, though, I ran into one tricky problem. I don&amp;rsquo;t have something like &lt;code&gt;startActivityResult&lt;/code&gt; for fragments. If you&amp;rsquo;re unfamiliar, &lt;code&gt;startActivityForResult&lt;/code&gt; is a method that allows you to launch an activity with a specific request code, and when that activity finishes, your first activity will get a callback in &lt;code&gt;onActivityResult&lt;/code&gt; and can do stuff with it.&lt;/p&gt;
&lt;p&gt;This post is going to walk through how we can achieve that same affect using fragments.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
