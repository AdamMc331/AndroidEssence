<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Material Design on Android Essence</title>
    <link>http://localhost:1313/tags/material-design/</link>
    <description>Recent content in Material Design on Android Essence</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Apr 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/material-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MaterialSearchView Library</title>
      <link>http://localhost:1313/posts/2016-04-22-materialsearchview-library/</link>
      <pubDate>Fri, 22 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2016-04-22-materialsearchview-library/</guid>
      
      <description>&lt;p&gt;Android has a built in SearchView component but it doesn&amp;rsquo;t feel much like Material Design. This has even been asked on &lt;a href=&#34;http://stackoverflow.com/questions/27556623/creating-a-searchview-that-looks-like-the-material-design-guidelines&#34;&gt;StackOverflow&lt;/a&gt; because developers are having trouble recreating the same MaterialSearchView that appears in many of Google&amp;rsquo;s applications. However, thanks to one of my good friends Maurício, you can now implement this great component in your own projects!&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Designing User Interfaces For Android Wear Part 2&amp;#58; Cards</title>
      <link>http://localhost:1313/posts/2016-01-26-designing-user-interfaces-for-android-wear-part-2/</link>
      <pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2016-01-26-designing-user-interfaces-for-android-wear-part-2/</guid>
      
      <description>&lt;p&gt;User interface for Android Wear have all the same components as a phone&amp;rsquo;s UI, they just appear a little differently. In this post we&amp;rsquo;re going to talk about Cards. You&amp;rsquo;ve most likely seen these in the Google now app, among other Material Design apps. Cards are great because they are a component that is able to provide a consistent look across multiple platforms.&lt;/p&gt;
&lt;p&gt;We will consider this post as a deeper dive into an &lt;a href=&#34;http://developer.android.com/training/wearables/ui/cards.html&#34;&gt;existing tutorial&lt;/a&gt; in the Android docs, but as that one states the Cards discussed here are not the same as the Cards that appear as notifications on Android Wear. See the link to better understand this distinction. Let&amp;rsquo;s go over some of the relevant classes, and we&amp;rsquo;ll discuss their differences and how to implement them.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Material Design Specs Library</title>
      <link>http://localhost:1313/posts/2015-12-13-material-design-specs-library/</link>
      <pubDate>Sun, 13 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2015-12-13-material-design-specs-library/</guid>
      
      <description>&lt;p&gt;Along with the &lt;a href=&#34;http://androidessence.com/recyclerview-cursoradapter-library/&#34;&gt;RecyclerViewCursorAdapter library&lt;/a&gt; that was released earlier this week, I have now released my second open source Android library. In collaboration with my good friend &lt;a href=&#34;https://github.com/Mauker1&#34;&gt;Maurício&lt;/a&gt;, we have built a library for including the Material Design Specs in your Android application. Currently, the library has the full color palette along with some helper methods, and some elevation resources to give the proper elevation to your components. The source code, as well as instructions for including the library can be found on &lt;a href=&#34;https://github.com/androidessence/MaterialDesignSpecs&#34;&gt;GitHub&lt;/a&gt;, so go there to check it out and give us a star!&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Creating A Material Design Navigation Drawer</title>
      <link>http://localhost:1313/posts/2015-10-11-creating-a-material-design-navigation-drawer/</link>
      <pubDate>Sun, 11 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2015-10-11-creating-a-material-design-navigation-drawer/</guid>
      
      <description>&lt;p&gt;For those of you who haven’t upgraded to Android Studio 1.4 yet, you may not have realized there is a new Navigation Drawer template in the New Project menu. While templates are great, they don’t always give you the full story. Modifying the Navigation View can be tricky if you don’t know where to look, and you may not understand why certain things are written as they are. This post is going to walk you through the process of creating your own Navigation View, and discussing some of the differences between this and the previous model.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Using Elevation In Android Applications</title>
      <link>http://localhost:1313/posts/2015-09-15-using-elevation-in-android-applications/</link>
      <pubDate>Tue, 15 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2015-09-15-using-elevation-in-android-applications/</guid>
      
      <description>&lt;p&gt;The backbone of Material Design is to design your user interface in a way that is simple and intuitive for users, in the same way we use our intuition with real life materials. One of the many ways this is achieved is through the use of elevation in Android UI components, demonstrated here:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/elevation.gif&#34; alt=&#34;Android Layout Visualizer&#34;&gt;&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
