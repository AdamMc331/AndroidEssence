<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Adapter on Android Essence</title>
    <link>http://localhost:1313/tags/adapter/</link>
    <description>Recent content in Adapter on Android Essence</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Dec 2015 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/adapter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RecyclerViewCursorAdapter Library</title>
      <link>http://localhost:1313/posts/2015-12-10-recyclerviewcursoradapter-library/</link>
      <pubDate>Thu, 10 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2015-12-10-recyclerviewcursoradapter-library/</guid>
      
      <description>&lt;p&gt;Today I released my first library which is for a RecyclerviewCursorAdapter.&lt;/p&gt;
&lt;p&gt;Using a ListView to display database data becomes a lot easier when you use a CursorAdapter combined with a CursorLoader to display data from your ContentProvider. The main benefit of &lt;a href=&#34;http://developer.android.com/intl/pt-br/reference/android/content/CursorLoader.html&#34;&gt;CursorLoader&lt;/a&gt; is explained in the docs:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>How To Use The RecyclerView Adapter</title>
      <link>http://localhost:1313/posts/2015-09-17-how-to-use-the-recyclerview-adapter/</link>
      <pubDate>Thu, 17 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/2015-09-17-how-to-use-the-recyclerview-adapter/</guid>
      
      <description>&lt;p&gt;The &lt;a href=&#34;https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html&#34;&gt;RecyclerView.Adapter&lt;/a&gt; class is used to bind a dataset to a RecyclerView to be displayed to a user. As I explained in another post, [RecyclerView Vs ListView]({{ site.baseurl }}{% link _posts/2015-09-07-recyclerview-vs-listview.md %}), the RecyclerView.Adapter forces the use of the ViewHolder pattern, which may be hard to understand when switching to a RecyclerView from a ListView. In this short post I am going to reference my MovieAdapter class from my [Swipe-To-Dismiss]({{ site.baseurl }}{% link _posts/2015-09-09-swipe-to-dismiss-recyclerview-items.md %}) example, and break it down to explain the required implementations and how to use the RecyclerView adapter.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
